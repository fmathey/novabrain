{"version":3,"sources":["webpack:///webpack/bootstrap 4409003382687f332e1a","webpack:///./source/novabrain.js","webpack:///./source/neuron.js","webpack:///./source/transfer.js","webpack:///./source/layer.js","webpack:///./source/network.js","webpack:///./source/trainer.js","webpack:///./source/samples.js"],"names":[],"mappings":"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","file":"novabrain.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 4409003382687f332e1a\n **/","module.exports = {\n    Neuron: require('./neuron'),\n    Layer: require('./layer'),\n    Network: require('./network'),\n    Trainer: require('./trainer'),\n    Transfer: require('./transfer'),\n    Samples: require('./samples'),\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./source/novabrain.js\n **/","var Transfer = require('./transfer');\n\nclass Neuron {\n\n    constructor(size) {\n        this.bias = Math.random() * 0.4 - 0.2;\n        this.weights = [];\n        for (var i = 0; i < size; i++) {\n            this.weights.push(Math.random() * 0.4 - 0.2);\n        }\n    }\n\n    output(inputs, transfer) {\n\n        if (!Array.isArray(inputs)) {\n            throw new Error('Inputs array expected');\n        }\n\n        if (inputs.length !== this.weights.length) {\n            throw new Error('Inputs length ' + this.weights.length + ' expected');\n        }\n\n        transfer = transfer || Transfer.LOGISTIC;\n\n        var sum = this.bias;\n        for(var i = 0, imax = this.weights.length; i < imax; i++) {\n            sum += this.weights[i] * inputs[i];\n        }\n        return transfer(sum);\n    }\n\n    export() {\n        return {\n            bias: this.bias,\n            weights: this.weights.slice()\n        };\n    }\n}\n\nmodule.exports = Neuron;\n\n\n\n/** WEBPACK FOOTER **\n ** ./source/neuron.js\n **/","module.exports = {\n\n    LOGISTIC: function(sum) {\n        return 1 / (1 + Math.exp(-sum));\n    },\n\n    HARDLIMIT: function(sum) {\n        return sum > 0 ? 1 : 0;\n    },\n\n    BOOLEAN: function(sum) {\n        return sum > 0 ? true : false;\n    },\n\n    IDENTITY: function(sum) {\n        return sum;\n    },\n\n    TANH: function(sum) {\n        var eP = Math.exp(sum);\n        var eN = 1 / eP;\n        return (eP - eN) / (eP + eN);\n    }\n    \n};\n\n\n/** WEBPACK FOOTER **\n ** ./source/transfer.js\n **/","var Neuron = require('./neuron');\n\nclass Layer {\n\n    constructor(numberOfNeurons, sizeOfNeurons) {\n        this.neurons = [];\n        for (var i = 0; i < numberOfNeurons; i++) {\n            this.neurons.push(new Neuron(sizeOfNeurons));\n        }\n    }\n\n    output(inputs, transfer) {\n        var results = [];\n        this.neurons.forEach((neuron) => {\n            results.push(neuron.output(inputs, transfer));\n        });\n        return results;\n    }\n\n    export() {\n        var json = [];\n        this.neurons.forEach((neuron) => {\n            json.push(neuron.export());\n        });\n        return json;\n    }\n\n}\n\nmodule.exports = Layer;\n\n\n/** WEBPACK FOOTER **\n ** ./source/layer.js\n **/","var Layer = require('./layer');\nvar Transfer = require('./transfer');\n\nclass Network {\n\n    constructor() {\n\n        this.layers = [];\n\n        var args = Array.prototype.slice.call(arguments);\n\n        if (args < 2) {\n            throw new Error('Network expected 2 integers or more');\n        }\n\n        if (args.length === 2) {\n            args.splice(1, 0, Math.max(3, Math.floor(args[0] / 2)));\n        }\n\n        this.layers.push(new Layer(args[0], 1));\n\n        for (var i = 1; i < args.length; i++) {\n            this.layers.push(new Layer(args[i], this.layers[i-1].neurons.length));\n        }\n\n        this.transfer = Transfer.LOGISTIC;\n    }\n\n    output(inputs, transfer) {\n        var outputs = [];\n        for (var i = 1; i < this.layers.length; i++) {\n            outputs = inputs = this.layers[i].output(inputs, transfer || this.transfer);\n        }\n        return outputs;\n    }\n\n    export() {\n        var json = [];\n        for (var i = 0; i < this.layers.length; i++) {\n            json.push(this.layers[i].export());\n        }\n        return json;\n    }\n\n    import(layers) {\n\n        if (layers instanceof Network) {\n            layers = layers.export();\n        }\n\n        if (layers.length !== this.layers.length) {\n            throw new Error('Network expected [' + this.layers.length + '] layers');\n        }\n\n        for (var i = 0; i < this.layers.length; i++) {\n\n            var neurons = this.layers[i].neurons;\n\n            if (layers[i].length !== neurons.length) {\n                throw new Error('Layer [' + i + '] expected [' + neurons.length + '] neurons');\n            }\n\n            for (var j = 0; j < neurons.length; j++) {\n\n                var neuron = neurons[j];\n\n                if (layers[i][j].bias === undefined) {\n                    throw new Error('Neuron [' + j + '] expected a [bias] value');\n                }\n\n                neuron.bias = layers[i][j].bias;\n\n                if (!Array.isArray(layers[i][j].weights)) {\n                    throw new Error('Neuron [' + j + '] expected a [weights] array of [' + neuron.weights.length + '] values');\n                }\n\n                for (var k = 0; k < neuron.weights.length; k++) {\n                    neuron.weights[k] = layers[i][j].weights[k];\n                }\n            }\n        }\n        return this;\n    }\n\n    standalone(transfer) {\n\n        transfer = Transfer.LOGISTIC.toString();\n\n        var layers = JSON.stringify(this.export());\n\n        var buffer = '';\n\n        buffer += 'transfer = transfer || ' + transfer + ';';\n        buffer += 'var layers = ' + layers + ';';\n        buffer += 'for (var i = 1; i < layers.length; i++) {';\n        buffer += 'var layer = layers[i];';\n        buffer += 'var outputs = [];';\n        buffer += 'for (var j = 0; j < layer.length; j++) {';\n        buffer += 'var neuron = layer[j];';\n        buffer += 'var result = neuron.bias;';\n        buffer += 'for (var k = 0; k < neuron.weights.length; k++) {';\n        buffer += 'result += neuron.weights[k] * inputs[k];';\n        buffer += '}';\n        buffer += 'outputs[j] = transfer(result);';\n        buffer += '}';\n        buffer += 'inputs = outputs;';\n        buffer += '}';\n        buffer += 'return outputs;';\n\n        return new Function(\"inputs\", \"transfer\", buffer);\n    }\n\n}\n\nmodule.exports = Network;\n\n\n/** WEBPACK FOOTER **\n ** ./source/network.js\n **/","var Network = require('./network');\n\nclass Trainer {\n\n    constructor(network) {\n\n        if (!(network instanceof Network)) {\n            throw new Error('Network instance expected');\n        }\n\n        this.network     = network;\n        this.inputSize   = network.layers[0].neurons.length;\n        this.outputSize  = network.layers[network.layers.length-1].neurons.length;\n        this.nbLayers    = this.network.layers.length;\n        this.lastLayerId = this.nbLayers - 1;\n        this.errors      = [];\n        this.deltas      = [];\n        this.changes     = [];\n    }\n\n    reset() {\n        this.errors  = [];\n        this.deltas  = [];\n        this.changes = this.network.export();\n        for (var i in this.network.layers) {\n            for (var j in this.network.layers[i].neurons) {\n                for (var k in this.network.layers[i].neurons[j].weights) {\n                    this.changes[i][j].weights[k] = 0;\n                }\n            }\n        }\n    }\n\n    //\n    // Trainer.train\n    //\n    // Train the network with back propagation\n    //\n    // @param  Array              : Training data\n    // @param  options.iterations : The number of back propagation iterations\n    // @param  options.learning   : Learning rate\n    // @param  options.momentum   : Reduction rate\n    // @param  options.treshold   : Error treshold to break iterations loop\n    // @param  options.callback   : Callback function for log\n    // @param  options.interval   : Callback function interval\n    // @return Object\n    //\n    train(data, options) {\n        options = options || {};\n        options.iterations = options.iterations || 20000;\n        options.learning   = options.learning   || 0.3;\n        options.momentum   = options.momentum   || 0.1;\n        options.treshold   = options.treshold   || 0.005;\n        options.callback   = options.callback   || null;\n        options.interval   = options.interval   || 10;\n\n        if (!(Array.isArray(data[0].input) && data[0].input.length === this.inputSize)) {\n            throw new Error('Train expected an input data array of ' + this.inputSize);\n        }\n\n        if (!(Array.isArray(data[0].output) && data[0].output.length === this.outputSize)) {\n            throw new Error('Train expected an output data array of ' + this.outputSize);\n        }\n\n        this.reset();\n\n        var globalError = 10;\n        var iterationsCount = 0;\n\n        for (var i = 0; i < options.iterations && globalError > options.treshold; i++) {\n\n            var iterationError = 0;\n\n            for (var j = 0; j < data.length; j++) {\n                iterationError += this.trainPattern(\n                    data[j].input,\n                    data[j].output,\n                    options.learning,\n                    options.momentum\n                );\n            }\n\n            globalError = iterationError / data.length;\n\n            if (options.callback && (i % options.interval == 0)) {\n                options.callback({ error: globalError, iterations: i });\n            }\n\n            iterationsCount++;\n        }\n\n        return {\n            error: globalError,\n            iterations: iterationsCount\n        };\n    }\n\n    trainPattern(input, target, learning, momentum) {\n\n        learning = learning || 0.3;\n        momentum = momentum || 0.1;\n\n        var outputs = this.getOutputs(input);\n\n        // Calculate errors and deltas\n\n        for (var layerId = this.lastLayerId; layerId >= 0; layerId--) {\n            this.errors[layerId] = [];\n            this.deltas[layerId] = [];\n            for (var neuronId = 0; neuronId < this.network.layers[layerId].neurons.length; neuronId++) {\n                var output = outputs[layerId][neuronId];\n                var neuronError = 0;\n                if (layerId === this.lastLayerId) {\n                    neuronError = target[neuronId] - output;\n                } else {\n                    for (var k = 0; k < this.deltas[layerId + 1].length; k++) {\n                        var weight = this.network.layers[layerId + 1].neurons[k].weights[neuronId];\n                        neuronError += this.deltas[layerId + 1][k] * weight;\n                    }\n                }\n                this.errors[layerId][neuronId] = neuronError;\n                this.deltas[layerId][neuronId] = neuronError * output * (1 - output);\n            }\n        }\n\n        // Back propagate\n\n        for (var layerId = 1; layerId < this.nbLayers; layerId++) {\n            var incoming = outputs[layerId - 1];\n            var layer = this.network.layers[layerId];\n            for (var neuronId = 0; neuronId < layer.neurons.length; neuronId++) {\n                var neuron = layer.neurons[neuronId];\n                var delta  = this.deltas[layerId][neuronId];\n                for (var k = 0; k < incoming.length; k++) {\n                    var change = this.changes[layerId][neuronId][k] || 0;\n                    change = (learning * delta * incoming[k]) + (momentum * change);\n                    neuron.weights[k] += change;\n                    this.changes[layerId][neuronId][k] = change;\n                }\n                neuron.bias += learning * delta;\n            }\n        }\n\n        return this.getErrorSum(this.errors[this.lastLayerId]);\n    }\n\n    getOutputs(inputs) {\n        var outputs = [];\n        var output  = outputs[0] = inputs.slice();\n        for (var i = 1; i < this.network.layers.length; i++) {\n            output = outputs[i] = this.network.layers[i].output(output);\n        }\n        return outputs;\n    }\n\n    getErrorSum(errors) {\n        var sum = 0;\n        errors.forEach((error) => {\n            sum += Math.pow(error, 2);\n        });\n        return sum / errors.length;\n    };\n\n}\n\nmodule.exports = Trainer;\n\n\n/** WEBPACK FOOTER **\n ** ./source/trainer.js\n **/","module.exports = {\n\n    XOR: {\n        training: [\n            { input: [0,0], output: [0] },\n            { input: [0,1], output: [1] },\n            { input: [1,0], output: [1] },\n            { input: [1,1], output: [0] },\n        ],\n\n        config: [\n            [\n                { bias: 0.1804561257362366, weights: [ -0.167204974219203 ] },\n                { bias: -0.04569602627307176, weights: [ 0.18746992871165274 ] }\n            ],\n            [\n                { bias: 4.594158542478944, weights: [ -3.040062330305626, -3.362846210091373 ] },\n                { bias: 2.253482826600183, weights: [ -5.98762513515333, -5.965287921412066 ] },\n                { bias: 2.2578395038508865, weights: [ -2.0587523788017017, -1.562316369066697 ] }\n            ],\n            [\n                { bias: -3.8152869540660492, weights: [ 5.941256505289369, -8.507284881253804, 3.1455340193310843 ] }\n            ]\n        ]\n    },\n\n    AND: {\n        training: [\n            { input: [0,0], output: [0] },\n            { input: [0,1], output: [0] },\n            { input: [1,0], output: [0] },\n            { input: [1,1], output: [1] },\n        ],\n\n        config: [\n            [\n                { bias: 0.05568741559982299, weights: [ -0.07880215616896749 ] },\n                { bias: 0.11339050624519587, weights: [ -0.08192619075998664 ] }\n            ],\n            [\n                { bias: 1.2162003373115722, weights: [ -1.5325596790646399, -1.6694862833366626 ] },\n                { bias: 3.5218949042093537, weights: [ -2.9473826605615274, -2.6480166644816325 ] },\n                { bias: 1.2894144846904376, weights: [ -1.3971381146583233, -1.8841189975945027 ] }\n            ],\n            [\n                { bias: 3.4025251093426854, weights: [ -2.7717050850924494, -5.672159962134176, -2.836860716358213 ] }\n            ]\n        ]\n    },\n\n    OR: {\n        training: [\n            { input: [0,0], output: [0] },\n            { input: [0,1], output: [1] },\n            { input: [1,0], output: [1] },\n            { input: [1,1], output: [1] },\n        ],\n\n        config: [\n            [\n                { bias: 0.023853175062686194, weights: [ -0.05087699200958015 ] },\n                { bias: -0.04783560279756785, weights: [ -0.12696466147899627 ] }\n            ],\n            [\n                { bias: 0.7767897854256859, weights: [ -1.7520145026333327, -1.7771349756367834 ] },\n                { bias: -0.47207093390546423, weights: [ 1.0731066688291095, 1.040178424526655 ] },\n                { bias: -1.5422804887749049, weights: [ 3.1529762364879015, 3.1483531621536285 ] }\n            ],\n            [\n                { bias: -1.2640437852289894, weights: [ -3.1821062179619575, 1.162433847357973, 4.845167062525612 ] }\n            ]\n        ]\n    },\n\n};\n\n\n/** WEBPACK FOOTER **\n ** ./source/samples.js\n **/"],"sourceRoot":""}